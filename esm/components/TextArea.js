function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key];}}return target;}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key];}return target;}/** @jsx jsx */import{Fragment}from'react';import{jsx,useTheme}from'../style';export var GUTextArea=function GUTextArea(_ref){var className=_ref.className,labelSecond=_ref.labelSecond,props=_objectWithoutProperties(_ref,["className","labelSecond"]);var theme=useTheme();var label=props.label;return jsx("div",{css:theme.textArea.css(theme,props),className:className},labelSecond?jsx(Fragment,null,jsx("textarea",props),label&&jsx("label",{htmlFor:props.id},label)):jsx(Fragment,null,label&&jsx("label",{htmlFor:props.id},label),jsx("textarea",props)));};